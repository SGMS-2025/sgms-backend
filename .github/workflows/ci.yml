name: CI Pipeline

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
    branches: [main]
  push:
    branches: [develop, feature/*]

env:
  HUSKY: 0
  NODE_VERSION: '20'

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linter
        run: npm run lint
        
      - name: Run tests
        run: npm test
        
      - name: Validate environment configuration
        env:
          NODE_ENV: ${{ secrets.NODE_ENV }}
          PORT: ${{ secrets.PORT }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_EXPIRES_IN: ${{ secrets.JWT_EXPIRES_IN }}
          LOG_LEVEL: ${{ secrets.LOG_LEVEL }}
          CORS_ORIGIN: ${{ secrets.CORS_ORIGIN }}
          RATE_LIMIT_WINDOW_MS: ${{ secrets.RATE_LIMIT_WINDOW_MS }}
          RATE_LIMIT_MAX_REQUESTS: ${{ secrets.RATE_LIMIT_MAX_REQUESTS }}
        run: npm run test:config
        
      - name: Security audit
        run: npm audit --audit-level moderate
        
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Docker image
        run: |
          docker build . -t sgms-backend:${{ github.sha }}
          docker build . -t sgms-backend:latest
          
      - name: Test Docker image
        run: |
          docker run --rm sgms-backend:${{ github.sha }} node --version
          docker run --rm sgms-backend:${{ github.sha }} npm --version
