const nodemailer = require('nodemailer');
const { createAppError } = require('../common/error');
const { ERROR_MESSAGES } = require('../utils/constants');
const logger = require('../config/logger');

class EmailService {
  constructor() {
    this.transporter = null;
    this.initializeTransporter();
  }

  initializeTransporter() {
    // Always use real SMTP configuration
    this.transporter = nodemailer.createTransport({
      host: process.env.SMTP_HOST,
      port: process.env.SMTP_PORT || 587,
      secure: process.env.SMTP_SECURE === 'true',
      auth: {
        user: process.env.SMTP_USER,
        pass: process.env.SMTP_PASS,
      },
    });

    // Verify connection configuration
    this.transporter.verify((error, success) => {
      if (error) {
        logger.error('‚ùå SMTP configuration error:', error);
      } else {
        logger.info('‚úÖ SMTP server is ready to take our messages');
      }
    });
  }

  async sendOTPEmail(email, otpCode, fullName = 'User') {
    try {
      const mailOptions = {
        from: process.env.SMTP_FROM || 'noreply@sgms.com',
        to: email,
        subject: 'SGMS - X√°c th·ª±c ƒëƒÉng k√Ω t√†i kho·∫£n',
        html: this.generateOTPEmailTemplate(fullName, otpCode),
        text: this.generateOTPEmailText(fullName, otpCode),
      };

      const result = await this.transporter.sendMail(mailOptions);
      
      logger.info('‚úÖ OTP email sent successfully', {
        to: email,
        messageId: result.messageId,
      });

      return result;
    } catch (error) {
      logger.error('‚ùå Failed to send OTP email:', error);
      throw createAppError.internalServerError(ERROR_MESSAGES.EMAIL_SEND_FAILED);
    }
  }

  generateOTPEmailTemplate(fullName, otpCode) {
    return `
      <!DOCTYPE html>
      <html lang="vi">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>X√°c th·ª±c ƒëƒÉng k√Ω - SGMS</title>
        <style>
          body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f4f4f4;
          }
          .container {
            background-color: #ffffff;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0,0,0,0.1);
          }
          .header {
            text-align: center;
            margin-bottom: 30px;
          }
          .logo {
            font-size: 28px;
            font-weight: bold;
            color: #2563eb;
            margin-bottom: 10px;
          }
          .otp-code {
            background-color: #f8fafc;
            border: 2px solid #e2e8f0;
            border-radius: 8px;
            padding: 20px;
            text-align: center;
            margin: 20px 0;
            font-size: 32px;
            font-weight: bold;
            color: #1e40af;
            letter-spacing: 5px;
            font-family: 'Courier New', monospace;
          }
          .warning {
            background-color: #fef3c7;
            border-left: 4px solid #f59e0b;
            padding: 15px;
            margin: 20px 0;
            border-radius: 4px;
          }
          .footer {
            margin-top: 30px;
            padding-top: 20px;
            border-top: 1px solid #e5e7eb;
            text-align: center;
            color: #6b7280;
            font-size: 14px;
          }
          .button {
            display: inline-block;
            background-color: #2563eb;
            color: white;
            padding: 12px 24px;
            text-decoration: none;
            border-radius: 6px;
            margin: 10px 0;
          }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <div class="logo">üèãÔ∏è‚Äç‚ôÇÔ∏è SGMS</div>
            <h1>X√°c th·ª±c ƒëƒÉng k√Ω t√†i kho·∫£n</h1>
          </div>
          
          <p>Xin ch√†o <strong>${fullName}</strong>,</p>
          
          <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i SGMS (Smart Gym Management System).</p>
          
          <p>ƒê·ªÉ ho√†n t·∫•t qu√° tr√¨nh ƒëƒÉng k√Ω, vui l√≤ng s·ª≠ d·ª•ng m√£ OTP sau:</p>
          
          <div class="otp-code">${otpCode}</div>
          
          <div class="warning">
            <strong>‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng:</strong>
            <ul>
              <li>M√£ OTP n√†y c√≥ hi·ªáu l·ª±c trong <strong>10 ph√∫t</strong></li>
              <li>Kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai</li>
              <li>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒëƒÉng k√Ω, vui l√≤ng b·ªè qua email n√†y</li>
            </ul>
          </div>
          
          <p>N·∫øu b·∫°n g·∫∑p b·∫•t k·ª≥ v·∫•n ƒë·ªÅ n√†o, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i.</p>
          
          <div class="footer">
            <p>Tr√¢n tr·ªçng,<br>ƒê·ªôi ng≈© SGMS</p>
            <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
          </div>
        </div>
      </body>
      </html>
    `;
  }

  generateOTPEmailText(fullName, otpCode) {
    return `
SGMS - X√°c th·ª±c ƒëƒÉng k√Ω t√†i kho·∫£n

Xin ch√†o ${fullName},

C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i SGMS (Smart Gym Management System).

ƒê·ªÉ ho√†n t·∫•t qu√° tr√¨nh ƒëƒÉng k√Ω, vui l√≤ng s·ª≠ d·ª•ng m√£ OTP sau:

${otpCode}

L∆∞u √Ω quan tr·ªçng:
- M√£ OTP n√†y c√≥ hi·ªáu l·ª±c trong 10 ph√∫t
- Kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai
- N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒëƒÉng k√Ω, vui l√≤ng b·ªè qua email n√†y

N·∫øu b·∫°n g·∫∑p b·∫•t k·ª≥ v·∫•n ƒë·ªÅ n√†o, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i.

Tr√¢n tr·ªçng,
ƒê·ªôi ng≈© SGMS

Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.
    `;
  }

  async sendWelcomeEmail(email, fullName) {
    try {
      const mailOptions = {
        from: process.env.SMTP_FROM || 'noreply@sgms.com',
        to: email,
        subject: 'Ch√†o m·ª´ng ƒë·∫øn v·ªõi SGMS!',
        html: this.generateWelcomeEmailTemplate(fullName),
        text: this.generateWelcomeEmailText(fullName),
      };

      const result = await this.transporter.sendMail(mailOptions);
      
      logger.info('‚úÖ Welcome email sent successfully', {
        to: email,
        messageId: result.messageId,
      });

      return result;
    } catch (error) {
      logger.error('‚ùå Failed to send welcome email:', error);
      // Don't throw error for welcome email as it's not critical
    }
  }

  async sendPasswordResetOTP(email, otpCode, userEmail) {
    try {
      const mailOptions = {
        from: process.env.SMTP_FROM || 'noreply@sgms.com',
        to: email,
        subject: 'SGMS - ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u',
        html: this.generatePasswordResetEmailTemplate(userEmail, otpCode),
        text: this.generatePasswordResetEmailText(userEmail, otpCode),
      };

      const result = await this.transporter.sendMail(mailOptions);
      
      logger.info('‚úÖ Password reset OTP email sent successfully', {
        to: email,
        messageId: result.messageId,
      });

      return result;
    } catch (error) {
      logger.error('‚ùå Failed to send password reset OTP email:', error);
      throw createAppError.internalServerError(ERROR_MESSAGES.EMAIL_SEND_FAILED);
    }
  }

  generateWelcomeEmailTemplate(fullName) {
    return `
      <!DOCTYPE html>
      <html lang="vi">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Ch√†o m·ª´ng ƒë·∫øn v·ªõi SGMS</title>
        <style>
          body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f4f4f4;
          }
          .container {
            background-color: #ffffff;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0,0,0,0.1);
          }
          .header {
            text-align: center;
            margin-bottom: 30px;
          }
          .logo {
            font-size: 28px;
            font-weight: bold;
            color: #2563eb;
            margin-bottom: 10px;
          }
          .success {
            background-color: #d1fae5;
            border-left: 4px solid #10b981;
            padding: 15px;
            margin: 20px 0;
            border-radius: 4px;
          }
          .footer {
            margin-top: 30px;
            padding-top: 20px;
            border-top: 1px solid #e5e7eb;
            text-align: center;
            color: #6b7280;
            font-size: 14px;
          }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <div class="logo">üèãÔ∏è‚Äç‚ôÇÔ∏è SGMS</div>
            <h1>Ch√†o m·ª´ng ƒë·∫øn v·ªõi SGMS!</h1>
          </div>
          
          <div class="success">
            <strong>üéâ Ch√∫c m·ª´ng!</strong> T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng.
          </div>
          
          <p>Xin ch√†o <strong>${fullName}</strong>,</p>
          
          <p>Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi SGMS (Smart Gym Management System) - h·ªá th·ªëng qu·∫£n l√Ω ph√≤ng gym th√¥ng minh!</p>
          
          <p>V·ªõi t√†i kho·∫£n c·ªßa b·∫°n, b·∫°n c√≥ th·ªÉ:</p>
          <ul>
            <li>ƒê·∫∑t l·ªãch t·∫≠p luy·ªán</li>
            <li>Theo d√µi ti·∫øn ƒë·ªô t·∫≠p luy·ªán</li>
            <li>Qu·∫£n l√Ω th√¥ng tin c√° nh√¢n</li>
            <li>V√† nhi·ªÅu t√≠nh nƒÉng kh√°c...</li>
          </ul>
          
          <p>H√£y b·∫Øt ƒë·∫ßu h√†nh tr√¨nh fitness c·ªßa b·∫°n ngay h√¥m nay!</p>
          
          <div class="footer">
            <p>Tr√¢n tr·ªçng,<br>ƒê·ªôi ng≈© SGMS</p>
            <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
          </div>
        </div>
      </body>
      </html>
    `;
  }

  generateWelcomeEmailText(fullName) {
    return `
Ch√†o m·ª´ng ƒë·∫øn v·ªõi SGMS!

üéâ Ch√∫c m·ª´ng! T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng.

Xin ch√†o ${fullName},

Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi SGMS (Smart Gym Management System) - h·ªá th·ªëng qu·∫£n l√Ω ph√≤ng gym th√¥ng minh!

V·ªõi t√†i kho·∫£n c·ªßa b·∫°n, b·∫°n c√≥ th·ªÉ:
- ƒê·∫∑t l·ªãch t·∫≠p luy·ªán
- Theo d√µi ti·∫øn ƒë·ªô t·∫≠p luy·ªán
- Qu·∫£n l√Ω th√¥ng tin c√° nh√¢n
- V√† nhi·ªÅu t√≠nh nƒÉng kh√°c...

H√£y b·∫Øt ƒë·∫ßu h√†nh tr√¨nh fitness c·ªßa b·∫°n ngay h√¥m nay!

Tr√¢n tr·ªçng,
ƒê·ªôi ng≈© SGMS

Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.
    `;
  }

  generatePasswordResetEmailTemplate(userEmail, otpCode) {
    return `
      <!DOCTYPE html>
      <html lang="vi">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u - SGMS</title>
        <style>
          body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f4f4f4;
          }
          .container {
            background-color: #ffffff;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0,0,0,0.1);
          }
          .header {
            text-align: center;
            margin-bottom: 30px;
          }
          .logo {
            font-size: 28px;
            font-weight: bold;
            color: #dc2626;
            margin-bottom: 10px;
          }
          .otp-code {
            background-color: #fef2f2;
            border: 2px solid #fecaca;
            border-radius: 8px;
            padding: 20px;
            text-align: center;
            margin: 20px 0;
            font-size: 32px;
            font-weight: bold;
            color: #dc2626;
            letter-spacing: 5px;
            font-family: 'Courier New', monospace;
          }
          .warning {
            background-color: #fef3c7;
            border-left: 4px solid #f59e0b;
            padding: 15px;
            margin: 20px 0;
            border-radius: 4px;
          }
          .footer {
            margin-top: 30px;
            padding-top: 20px;
            border-top: 1px solid #e5e7eb;
            text-align: center;
            color: #6b7280;
            font-size: 14px;
          }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <div class="logo">üèãÔ∏è‚Äç‚ôÇÔ∏è SGMS</div>
            <h1>ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</h1>
          </div>
          
          <p>Xin ch√†o,</p>
          
          <p>Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n <strong>${userEmail}</strong>.</p>
          
          <p>ƒê·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng s·ª≠ d·ª•ng m√£ OTP sau:</p>
          
          <div class="otp-code">${otpCode}</div>
          
          <div class="warning">
            <strong>‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng:</strong>
            <ul>
              <li>M√£ OTP n√†y c√≥ hi·ªáu l·ª±c trong <strong>10 ph√∫t</strong></li>
              <li>Kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai</li>
              <li>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y</li>
              <li>T√†i kho·∫£n c·ªßa b·∫°n v·∫´n an to√†n</li>
            </ul>
          </div>
          
          <p>N·∫øu b·∫°n g·∫∑p b·∫•t k·ª≥ v·∫•n ƒë·ªÅ n√†o, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i.</p>
          
          <div class="footer">
            <p>Tr√¢n tr·ªçng,<br>ƒê·ªôi ng≈© SGMS</p>
            <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</p>
          </div>
        </div>
      </body>
      </html>
    `;
  }

  generatePasswordResetEmailText(userEmail, otpCode) {
    return `
SGMS - ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u

Xin ch√†o,

Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n ${userEmail}.

ƒê·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng s·ª≠ d·ª•ng m√£ OTP sau:

${otpCode}

L∆∞u √Ω quan tr·ªçng:
- M√£ OTP n√†y c√≥ hi·ªáu l·ª±c trong 10 ph√∫t
- Kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai
- N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y
- T√†i kho·∫£n c·ªßa b·∫°n v·∫´n an to√†n

N·∫øu b·∫°n g·∫∑p b·∫•t k·ª≥ v·∫•n ƒë·ªÅ n√†o, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i.

Tr√¢n tr·ªçng,
ƒê·ªôi ng≈© SGMS

Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.
    `;
  }
}

module.exports = new EmailService();
